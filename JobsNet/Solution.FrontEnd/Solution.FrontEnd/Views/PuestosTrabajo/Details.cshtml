@model PuestosTrabajo
@inject UserService UserService
@{
    ViewBag.Title = "Detalles de la Vacante";
    var statusMessage = ViewData["StatusMessage"];

    Oferentes oferente = await UserService.GetOferenteByUserName(User.Identity.Name);

    bool isOutOfTime = Model.FechaCierre.Date < DateTime.Now.Date;
    bool isOferente = oferente != null;
    bool alreadyApplied = false;
    if(isOferente)
    {
        alreadyApplied = await UserService.AlreadyApplied(oferente.IdOferente, Model.IdPuesto);
    }
    string classButtonSubmit = "btn-warning" ;
    string htmlButtonSubmitContent = "Ya no se permite recepciones";
    string buttonDisableAttribute = "disabled";
    if (!isOutOfTime)
    {
        buttonDisableAttribute = (alreadyApplied) ? buttonDisableAttribute : string.Empty;
        classButtonSubmit = "btn-primary" ;
        classButtonSubmit = (alreadyApplied) ? classButtonSubmit : "btn-primary";
        htmlButtonSubmitContent = "Aplicar";
        htmlButtonSubmitContent = (alreadyApplied) ? "Postulado" : htmlButtonSubmitContent;
    }
}
@if (statusMessage != null)
{
    if (!statusMessage.ToString().Equals(""))
    {
    <div class="alert alert-dismissible bg-purple text-white" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">×</span></button>
        <i class="fa fa-info-circle"></i> Informacion: @ViewData["StatusMessage"]
    </div>
    }
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb breadcrumb-style1 mg-b-0">
        <li class="breadcrumb-item">
            <a asp-action="All">
                <i class="fas fa-angle-left"></i>
                Volver a la lista
            </a>
        </li>
    </ol>
</nav>

<h2>@ViewBag.Title</h2>

<div>

    <div class="row no-gutters justify-content-between">
        <div class="col-8">
            <h4 class="tx-indigo">@Html.DisplayFor(model => model.Titulo)</h4>
            <a href="" class="isDisabled">
                @Model.Empresa.NombreEmpresa
            </a>
        </div>
        <div class="col-4 justify-content-end">
            <div class="row no-gutters justify-content-end">
                <div class="col-auto align-content-end">
                    @if (!isOutOfTime && !alreadyApplied && isOferente)
                    {
                        <form asp-controller="ListaOferentes" asp-action="Submit" id="form-submit" 
                            asp-route-idOferente="@oferente.IdOferente" 
                            asp-route-idPuesto="@Model.IdPuesto" >
                        </form>
                    }
                    @if(User.Identity.IsAuthenticated && isOferente)
                    {
                        <button type="submit" class="btn @classButtonSubmit" 
                            form="form-submit" @buttonDisableAttribute >
                            <i class="fas fa-file-upload"></i> @htmlButtonSubmitContent 
                        </button>
                    }
                    else
                    {
                        <a  asp-controller="Account" asp-action="Login"
                            class="@buttonDisableAttribute btn btn-primary" >
                            <i class="fas fa-file-upload"></i> 
                            @htmlButtonSubmitContent
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
    <hr class="m-0 mb-4" />
    <dl class="dl-horizontal">

        <dt>
            Publicado el @Html.ValueFor(model => model.FechaPublicacion, "{0:d MMMM, yyyy}")
        </dt>

        <dt>
            Descripcion del puesto:
        </dt>

        <dd>
            @{
                string descripcion = Model.Descripcion;
                descripcion = (string.IsNullOrEmpty(descripcion)) 
                    ? "Sin descripcion" : descripcion;
            } 
            @Html.Raw(descripcion.Replace("\n", "<br />"))
        </dd>

        <dt>
            ¿Cuáles son los requisitos para este puesto?
        </dt>

        <dd>
            @{
                string requisitos = Model.Descripcion;
                requisitos = (string.IsNullOrEmpty(requisitos)) 
                    ? "Sin requisitos" : requisitos;
            } 
            @Html.Raw(requisitos.Replace("\n", "<br />"))
        </dd>

        <dt>
            Se reciben solicitudes hasta el:
        </dt>

        <dd>
            @Html.ValueFor(model => model.FechaCierre, "{0:d MMMM, yyyy}")
        </dd>

    </dl>
</div>
